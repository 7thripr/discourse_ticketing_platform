{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as common from \"../assets/common.js\";\nexport default {\n  name: \"UserNavbar\",\n  props: [\"id_\"],\n  components: {},\n  data() {\n    return {\n      mainProps: {\n        center: true,\n        width: 40,\n        height: 40,\n        class: 'm1'\n      },\n      user_id: this.$store.getters.get_user_id,\n      user_role: this.$store.getters.get_user_role,\n      user_url_to_fetch_data: \"\",\n      user_profile_page_url: \"\",\n      profile_pic_base64: \"\",\n      nav_buttons: null\n    };\n  },\n  created() {\n    if (this.user_role === \"student\") {\n      this.user_url_to_fetch_data = common.STUDENT_API;\n      this.user_profile_page_url = \"/user-profile\";\n      this.nav_buttons = common.STUDENT_NAV_BUTTONS;\n    }\n    if (this.user_role === \"support\") {\n      this.user_url_to_fetch_data = common.SUPPORT_API;\n      this.user_profile_page_url = \"/user-profile\";\n      this.nav_buttons = common.SUPPORT_NAV_BUTTONS;\n    }\n    if (this.user_role === \"admin\") {\n      this.user_url_to_fetch_data = common.ADMIN_API;\n      this.user_profile_page_url = \"/user-profile\";\n      this.nav_buttons = common.ADMIN_NAV_BUTTONS;\n    }\n    for (let b of this.nav_buttons) {\n      if (b.id == this.id_) {\n        b.active = true;\n      } else {\n        b.active = false;\n      }\n    }\n    fetch(this.user_url_to_fetch_data, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        web_token: this.$store.getters.get_web_token,\n        user_id: this.user_id\n      }\n    }).then(response => response.json()).then(data => {\n      this.$log.debug(`Success : ${data}`);\n      if (data.category == \"success\") {\n        this.flashMessage.success({\n          message: \"User data retrieved\"\n        });\n        // data.message will contain user profile pic in base64 format\n        this.profile_pic_base64 = data.message[\"profile_photo_loc\"];\n      }\n      if (data.category == \"error\") {\n        this.flashMessage.error({\n          message: data.message\n        });\n      }\n    }).catch(error => {\n      this.$log.debug(`Error : ${error}`);\n      this.flashMessage.error({\n        message: \"Internal Server Error\"\n      });\n    });\n    this.profile_pic_base64 = \"https://blog.hubspot.com/hs-fs/hubfs/Google%20Drive%20Integration/Untitled%20document-Mar-24-2021-04-57-46-58-PM.jpeg?width=650&name=Untitled%20document-Mar-24-2021-04-57-46-58-PM.jpeg\";\n  },\n  mounted() {},\n  methods: {\n    profile_pic_base64_fn() {\n      return \"https://blog.hubspot.com/hs-fs/hubfs/Google%20Drive%20Integration/Untitled%20document-Mar-24-2021-04-57-46-58-PM.jpeg?width=650&name=Untitled%20document-Mar-24-2021-04-57-46-58-PM.jpeg\";\n    },\n    change_button_state(id_) {\n      for (let b of this.nav_buttons) {\n        if (b.id == id_) {\n          b.active = true;\n        } else {\n          b.active = false;\n        }\n      }\n      if (this.nav_buttons[_id - 1].title === 'Logout') {\n        // logout pressed\n        // this is temporary. logout component will be added soon\n        // On logout -> delete user data\n        this.$store.dispatch(\"set_state_after_logout\", {});\n        this.$router.push(\"/login\");\n      }\n    }\n  },\n  computed: {}\n};","map":{"version":3,"names":["common","name","props","components","data","mainProps","center","width","height","class","user_id","$store","getters","get_user_id","user_role","get_user_role","user_url_to_fetch_data","user_profile_page_url","profile_pic_base64","nav_buttons","created","STUDENT_API","STUDENT_NAV_BUTTONS","SUPPORT_API","SUPPORT_NAV_BUTTONS","ADMIN_API","ADMIN_NAV_BUTTONS","b","id","id_","active","fetch","method","headers","web_token","get_web_token","then","response","json","$log","debug","category","flashMessage","success","message","error","catch","mounted","methods","profile_pic_base64_fn","change_button_state","_id","title","dispatch","$router","push","computed"],"sources":["src/components/UserNavbar.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <b-navbar toggleable=\"lg\" type=\"light\" variant=\"light\">\r\n      <b-navbar-brand href=\"#\">OSTS</b-navbar-brand>\r\n      <b-navbar-toggle target=\"nav-collapse\"></b-navbar-toggle>\r\n      <b-collapse id=\"nav-collapse\" is-nav>\r\n        <b-navbar-nav>\r\n          <div class=\"buttons\" v-for=\"b in nav_buttons\" :key=\"b.id\">\r\n            <b-button\r\n              variant=\"primary\"\r\n              :to=\"{ path: b.link }\"\r\n              @click=\"change_button_state(b.id)\"\r\n              :style=\"{\r\n                boxShadow: b.active ? '5px 5px 15px 5px #a3a3a3' : 'none',\r\n                backgroundColor: b.active ? 'blue' : '#f8f9fa',\r\n                color: b.active ? 'white' : 'black',\r\n                borderColor: b.active ? '#007bff' : '#f8f9fa',\r\n                fontSize: b.active ? '18px' : '16px',\r\n              }\"\r\n              >{{ b.title }}</b-button\r\n            >\r\n          </div>\r\n        </b-navbar-nav>\r\n\r\n        <!-- Right aligned nav items -->\r\n        <b-navbar-nav class=\"ml-auto\">\r\n          <b-button id=\"profile_pic\" :to=\"{ path: user_profile_page_url }\"\r\n            ><b-img :src=\"profile_pic_base64\" v-bind=\"mainProps\" rounded=\"circle\" alt=\"Profile image\"></b-img>\r\n            \r\n          </b-button>\r\n        </b-navbar-nav>\r\n      </b-collapse>\r\n    </b-navbar>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as common from \"../assets/common.js\";\r\n\r\nexport default {\r\n  name: \"UserNavbar\",\r\n  props: [\"id_\"],\r\n  components: {},\r\n  data() {\r\n    return {\r\n      mainProps: { center: true, width: 40, height: 40, class: 'm1' },\r\n      user_id: this.$store.getters.get_user_id,\r\n      user_role: this.$store.getters.get_user_role,\r\n      user_url_to_fetch_data: \"\",\r\n      user_profile_page_url: \"\",\r\n      profile_pic_base64: \"\",\r\n      nav_buttons: null,\r\n    };\r\n  },\r\n  created() {\r\n    \r\n\r\n    if (this.user_role === \"student\") {\r\n      this.user_url_to_fetch_data = common.STUDENT_API;\r\n      this.user_profile_page_url = \"/user-profile\";\r\n      this.nav_buttons = common.STUDENT_NAV_BUTTONS;\r\n    }\r\n    if (this.user_role === \"support\") {\r\n      this.user_url_to_fetch_data = common.SUPPORT_API;\r\n      this.user_profile_page_url = \"/user-profile\";\r\n      this.nav_buttons = common.SUPPORT_NAV_BUTTONS;\r\n    }\r\n    if (this.user_role === \"admin\") {\r\n      this.user_url_to_fetch_data = common.ADMIN_API;\r\n      this.user_profile_page_url = \"/user-profile\";\r\n      this.nav_buttons = common.ADMIN_NAV_BUTTONS;\r\n    }\r\n\r\n    for (let b of this.nav_buttons) {\r\n      if (b.id == this.id_) {\r\n        b.active = true;\r\n      } else {\r\n        b.active = false;\r\n      }\r\n    }\r\n    \r\n\r\n    fetch(this.user_url_to_fetch_data, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        web_token: this.$store.getters.get_web_token,\r\n        user_id: this.user_id,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.$log.debug(`Success : ${data}`);\r\n        if (data.category == \"success\") {\r\n          this.flashMessage.success({\r\n            message: \"User data retrieved\",\r\n          });\r\n          // data.message will contain user profile pic in base64 format\r\n          this.profile_pic_base64 = data.message[\"profile_photo_loc\"];\r\n        }\r\n        if (data.category == \"error\") {\r\n          this.flashMessage.error({\r\n            message: data.message,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.$log.debug(`Error : ${error}`);\r\n        this.flashMessage.error({\r\n          message: \"Internal Server Error\",\r\n        });\r\n      });\r\n      this.profile_pic_base64 = \"https://blog.hubspot.com/hs-fs/hubfs/Google%20Drive%20Integration/Untitled%20document-Mar-24-2021-04-57-46-58-PM.jpeg?width=650&name=Untitled%20document-Mar-24-2021-04-57-46-58-PM.jpeg\";\r\n      \r\n  },\r\n  mounted() {},\r\n  methods: {\r\n    profile_pic_base64_fn(){\r\n      return \"https://blog.hubspot.com/hs-fs/hubfs/Google%20Drive%20Integration/Untitled%20document-Mar-24-2021-04-57-46-58-PM.jpeg?width=650&name=Untitled%20document-Mar-24-2021-04-57-46-58-PM.jpeg\";\r\n\r\n    },\r\n    change_button_state(id_) {\r\n      for (let b of this.nav_buttons) {\r\n        if (b.id == id_) {\r\n          b.active = true;\r\n        } else {\r\n          b.active = false;\r\n        }\r\n      }\r\n      if (this.nav_buttons[_id-1].title === 'Logout') {\r\n        // logout pressed\r\n        // this is temporary. logout component will be added soon\r\n        // On logout -> delete user data\r\n        this.$store.dispatch(\"set_state_after_logout\", {});\r\n        this.$router.push(\"/login\");\r\n      }\r\n    },\r\n  },\r\n  computed: {},\r\n};\r\n</script>\r\n\r\n<style>\r\nnav {\r\n  padding: 30px;\r\n}\r\n\r\nnav a {\r\n  font-weight: bold;\r\n  color: #4dd325;\r\n}\r\n\r\nnav a.router-link-exact-active {\r\n  color: #441ada;\r\n}\r\n\r\n.buttons {\r\n  margin: 15px;\r\n  justify-content: space-between;\r\n}\r\n\r\n#profile_pic {\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n}\r\n\r\nrouter-link {\r\n  box-shadow: 5px 10px 8px 10px #888888;\r\n  background-color: aqua;\r\n}\r\n</style>\r\n"],"mappings":";AAqCA,YAAAA,MAAA;AAEA;EACAC,IAAA;EACAC,KAAA;EACAC,UAAA;EACAC,KAAA;IACA;MACAC,SAAA;QAAAC,MAAA;QAAAC,KAAA;QAAAC,MAAA;QAAAC,KAAA;MAAA;MACAC,OAAA,OAAAC,MAAA,CAAAC,OAAA,CAAAC,WAAA;MACAC,SAAA,OAAAH,MAAA,CAAAC,OAAA,CAAAG,aAAA;MACAC,sBAAA;MACAC,qBAAA;MACAC,kBAAA;MACAC,WAAA;IACA;EACA;EACAC,QAAA;IAGA,SAAAN,SAAA;MACA,KAAAE,sBAAA,GAAAhB,MAAA,CAAAqB,WAAA;MACA,KAAAJ,qBAAA;MACA,KAAAE,WAAA,GAAAnB,MAAA,CAAAsB,mBAAA;IACA;IACA,SAAAR,SAAA;MACA,KAAAE,sBAAA,GAAAhB,MAAA,CAAAuB,WAAA;MACA,KAAAN,qBAAA;MACA,KAAAE,WAAA,GAAAnB,MAAA,CAAAwB,mBAAA;IACA;IACA,SAAAV,SAAA;MACA,KAAAE,sBAAA,GAAAhB,MAAA,CAAAyB,SAAA;MACA,KAAAR,qBAAA;MACA,KAAAE,WAAA,GAAAnB,MAAA,CAAA0B,iBAAA;IACA;IAEA,SAAAC,CAAA,SAAAR,WAAA;MACA,IAAAQ,CAAA,CAAAC,EAAA,SAAAC,GAAA;QACAF,CAAA,CAAAG,MAAA;MACA;QACAH,CAAA,CAAAG,MAAA;MACA;IACA;IAGAC,KAAA,MAAAf,sBAAA;MACAgB,MAAA;MACAC,OAAA;QACA;QACAC,SAAA,OAAAvB,MAAA,CAAAC,OAAA,CAAAuB,aAAA;QACAzB,OAAA,OAAAA;MACA;IACA,GACA0B,IAAA,CAAAC,QAAA,IAAAA,QAAA,CAAAC,IAAA,IACAF,IAAA,CAAAhC,IAAA;MACA,KAAAmC,IAAA,CAAAC,KAAA,cAAApC,IAAA;MACA,IAAAA,IAAA,CAAAqC,QAAA;QACA,KAAAC,YAAA,CAAAC,OAAA;UACAC,OAAA;QACA;QACA;QACA,KAAA1B,kBAAA,GAAAd,IAAA,CAAAwC,OAAA;MACA;MACA,IAAAxC,IAAA,CAAAqC,QAAA;QACA,KAAAC,YAAA,CAAAG,KAAA;UACAD,OAAA,EAAAxC,IAAA,CAAAwC;QACA;MACA;IACA,GACAE,KAAA,CAAAD,KAAA;MACA,KAAAN,IAAA,CAAAC,KAAA,YAAAK,KAAA;MACA,KAAAH,YAAA,CAAAG,KAAA;QACAD,OAAA;MACA;IACA;IACA,KAAA1B,kBAAA;EAEA;EACA6B,QAAA;EACAC,OAAA;IACAC,sBAAA;MACA;IAEA;IACAC,oBAAArB,GAAA;MACA,SAAAF,CAAA,SAAAR,WAAA;QACA,IAAAQ,CAAA,CAAAC,EAAA,IAAAC,GAAA;UACAF,CAAA,CAAAG,MAAA;QACA;UACAH,CAAA,CAAAG,MAAA;QACA;MACA;MACA,SAAAX,WAAA,CAAAgC,GAAA,MAAAC,KAAA;QACA;QACA;QACA;QACA,KAAAzC,MAAA,CAAA0C,QAAA;QACA,KAAAC,OAAA,CAAAC,IAAA;MACA;IACA;EACA;EACAC,QAAA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}