{"ast":null,"code":"import Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport StudentHome from '../views/StudentHome.vue';\nimport LoginView from '../views/LoginView.vue';\nimport RegisterView from '../views/RegisterView.vue';\nimport store from '../store';\nVue.use(VueRouter);\nconst routes = [{\n  path: '/student_home',\n  name: 'student_home',\n  component: StudentHome\n}, {\n  path: '/support_home',\n  name: 'support_home',\n  component: SupportHome\n}, {\n  path: '/admin_home',\n  name: 'admin_home',\n  component: AdminHome\n}, {\n  path: '/login',\n  name: 'LoginView',\n  component: LoginView,\n  alias: '/'\n}, {\n  path: '/register',\n  name: 'RegisterView',\n  component: RegisterView\n}, {\n  path: '/about',\n  name: 'about',\n  // route level code-splitting\n  // this generates a separate chunk (about.[hash].js) for this route\n  // which is lazy-loaded when the route is visited.\n  component: () => import( /* webpackChunkName: \"about\" */'../views/AboutView.vue')\n}, {\n  path: '*',\n  redirect: '/'\n}];\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  // redirect to login page if not logged in and trying to access a restricted page\n  const publicPages = ['/login', '/register'];\n  const authRequired = !publicPages.includes(to.path);\n  if (!store.getters.get_logged_status) {\n    store.commit('initialiseStore');\n  }\n  const logged_status = store.getters.get_logged_status;\n  console.log('Routing', to.path, authRequired, logged_status);\n  if (authRequired && !logged_status) {\n    alert(\"Token expired. Please log in again.\");\n    return next('/login');\n  }\n  next();\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","StudentHome","LoginView","RegisterView","store","use","routes","path","name","component","SupportHome","AdminHome","alias","redirect","router","mode","base","process","env","BASE_URL","beforeEach","to","from","next","publicPages","authRequired","includes","getters","get_logged_status","commit","logged_status","console","log","alert"],"sources":["D:/IITM_exam/IITM_Term_7/SE_Project/Tushar_Work/code/frontend/src/router/index.js"],"sourcesContent":["import Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport StudentHome from '../views/StudentHome.vue';\nimport LoginView from '../views/LoginView.vue';\nimport RegisterView from '../views/RegisterView.vue';\nimport store from '../store';\n\nVue.use(VueRouter);\n\nconst routes = [\n  {\n    path: '/student_home',\n    name: 'student_home',\n    component: StudentHome,\n  },\n  {\n    path: '/support_home',\n    name: 'support_home',\n    component: SupportHome,\n  },\n  {\n    path: '/admin_home',\n    name: 'admin_home',\n    component: AdminHome,\n  },\n  {\n    path: '/login',\n    name: 'LoginView',\n    component: LoginView,\n    alias: '/',\n  },\n  {\n    path: '/register',\n    name: 'RegisterView',\n    component: RegisterView,\n  },\n  {\n    path: '/about',\n    name: 'about',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"about\" */ '../views/AboutView.vue'),\n  },\n\n  { path: '*', redirect: '/', }\n];\n\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes,\n});\n\nrouter.beforeEach((to, from, next) => {\n  // redirect to login page if not logged in and trying to access a restricted page\n  const publicPages = ['/login', '/register'];\n  const authRequired = !publicPages.includes(to.path);\n  if (!store.getters.get_logged_status){\n    store.commit('initialiseStore');\n  }\n  const logged_status = store.getters.get_logged_status;\n  console.log('Routing', to.path, authRequired, logged_status);\n  if (authRequired && !logged_status) {\n    alert(\"Token expired. Please log in again.\");\n    return next('/login');\n  }\n  next();\n})\n\n\nexport default router;\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,KAAK,MAAM,UAAU;AAE5BL,GAAG,CAACM,GAAG,CAACL,SAAS,CAAC;AAElB,MAAMM,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,eAAe;EACrBC,IAAI,EAAE,cAAc;EACpBC,SAAS,EAAER;AACb,CAAC,EACD;EACEM,IAAI,EAAE,eAAe;EACrBC,IAAI,EAAE,cAAc;EACpBC,SAAS,EAAEC;AACb,CAAC,EACD;EACEH,IAAI,EAAE,aAAa;EACnBC,IAAI,EAAE,YAAY;EAClBC,SAAS,EAAEE;AACb,CAAC,EACD;EACEJ,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAEP,SAAS;EACpBU,KAAK,EAAE;AACT,CAAC,EACD;EACEL,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,cAAc;EACpBC,SAAS,EAAEN;AACb,CAAC,EACD;EACEI,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACb;EACA;EACA;EACAC,SAAS,EAAEA,CAAA,KAAM,MAAM,EAAC,+BAAgC,wBAAwB;AAClF,CAAC,EAED;EAAEF,IAAI,EAAE,GAAG;EAAEM,QAAQ,EAAE;AAAK,CAAC,CAC9B;AAED,MAAMC,MAAM,GAAG,IAAId,SAAS,CAAC;EAC3Be,IAAI,EAAE,SAAS;EACfC,IAAI,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ;EAC1Bb;AACF,CAAC,CAAC;AAEFQ,MAAM,CAACM,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC;EACA,MAAMC,WAAW,GAAG,CAAC,QAAQ,EAAE,WAAW,CAAC;EAC3C,MAAMC,YAAY,GAAG,CAACD,WAAW,CAACE,QAAQ,CAACL,EAAE,CAACd,IAAI,CAAC;EACnD,IAAI,CAACH,KAAK,CAACuB,OAAO,CAACC,iBAAiB,EAAC;IACnCxB,KAAK,CAACyB,MAAM,CAAC,iBAAiB,CAAC;EACjC;EACA,MAAMC,aAAa,GAAG1B,KAAK,CAACuB,OAAO,CAACC,iBAAiB;EACrDG,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEX,EAAE,CAACd,IAAI,EAAEkB,YAAY,EAAEK,aAAa,CAAC;EAC5D,IAAIL,YAAY,IAAI,CAACK,aAAa,EAAE;IAClCG,KAAK,CAAC,qCAAqC,CAAC;IAC5C,OAAOV,IAAI,CAAC,QAAQ,CAAC;EACvB;EACAA,IAAI,EAAE;AACR,CAAC,CAAC;AAGF,eAAeT,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}