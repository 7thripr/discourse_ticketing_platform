{"ast":null,"code":"import Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport LoginView from '../views/LoginView.vue';\nimport RegisterView from '../views/RegisterView.vue';\nimport store from '../store';\nimport * as common from \"../assets/common.js\";\nimport StudentHome from '../views/StudentHome.vue';\nimport StudentCreateTicket from '../views/StudentCreateTicket.vue';\nimport StudentMyTickets from '../views/StudentMyTickets.vue';\nimport CommonFAQs from '../views/CommonFAQs.vue';\n// import StudentView from '../views/StudentView.vue';\n// import SupportView from '../views/SupportView.vue';\n// import AdminView from '../views/AdminView.vue';\nimport AppHomeView from '../views/AppHomeView.vue';\nimport UserProfile from '../views/UserProfile.vue';\nVue.use(VueRouter);\nconst routes = [{\n  path: '/',\n  alias: '/home',\n  name: 'AppHomeView',\n  component: AppHomeView\n}, {\n  path: '/login',\n  name: 'LoginView',\n  component: LoginView\n}, {\n  path: '/register',\n  name: 'RegisterView',\n  component: RegisterView\n}, {\n  path: '/student-home',\n  name: 'StudentHome',\n  component: StudentHome\n}, {\n  path: '/student-create-ticket',\n  name: 'StudentCreateTicket',\n  component: StudentCreateTicket\n}, {\n  path: '/student-my-tickets',\n  name: 'StudentMyTickets',\n  component: StudentMyTickets\n}, {\n  path: '/common-faqs',\n  name: 'CommonFAQs',\n  component: CommonFAQs\n}, {\n  path: '/user-profile',\n  name: 'UserProfile',\n  component: UserProfile\n}, {\n  path: '*',\n  redirect: '/'\n}];\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  // redirect to login page if not logged in and trying to access a restricted page\n  const publicPages = ['/login', '/register', '/', '/home'];\n  const authRequired = !publicPages.includes(to.path);\n  if (!store.getters.get_logged_status) {\n    store.commit('initialiseStore');\n  }\n  const logged_status = store.getters.get_logged_status;\n  console.log('Routing', from.path, to.path, authRequired, logged_status);\n  if (authRequired && !logged_status) {\n    alert(\"Token expired. Please log in again.\");\n    return next('/login');\n  }\n  if (authRequired && logged_status) {\n    const role = store.state.user.role;\n    let accesing = \"\";\n    if (common.STUDENT_ROUTES.includes(to.path)) {\n      accesing = \"student\";\n    }\n    if (common.SUPPORT_ROUTES.includes(to.path)) {\n      accesing = \"support\";\n    }\n    if (common.ADMIN_ROUTES.includes(to.path)) {\n      accesing = \"admin\";\n    }\n    console.log('Checking role: ', role, to.path, accesing);\n    console.log('student routes: ', common.STUDENT_ROUTES, to.path);\n    if (role != accesing) {\n      alert(\"You don't have access to this page.\");\n      return next(`/${role}-home`);\n    }\n  }\n  next();\n});\nexport default router;\n\n// {\n//   path: '/student',\n//   name: 'StudentView',\n//   component: StudentView,\n// },\n// {\n//   path: '/support',\n//   name: 'SupportView',\n//   component: SupportView,\n// },\n// {\n//   path: '/admin',\n//   name: 'AdminView',\n//   component: AdminView,\n// },","map":{"version":3,"names":["Vue","VueRouter","LoginView","RegisterView","store","common","StudentHome","StudentCreateTicket","StudentMyTickets","CommonFAQs","AppHomeView","UserProfile","use","routes","path","alias","name","component","redirect","router","mode","base","process","env","BASE_URL","beforeEach","to","from","next","publicPages","authRequired","includes","getters","get_logged_status","commit","logged_status","console","log","alert","role","state","user","accesing","STUDENT_ROUTES","SUPPORT_ROUTES","ADMIN_ROUTES"],"sources":["D:/IITM_exam/IITM_Term_7/SE_Project/Tushar_Work/code/frontend/src/router/index.js"],"sourcesContent":["import Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport LoginView from '../views/LoginView.vue';\nimport RegisterView from '../views/RegisterView.vue';\nimport store from '../store';\nimport * as common from \"../assets/common.js\";\nimport StudentHome from '../views/StudentHome.vue';\nimport StudentCreateTicket from '../views/StudentCreateTicket.vue';\nimport StudentMyTickets from '../views/StudentMyTickets.vue';\nimport CommonFAQs from '../views/CommonFAQs.vue';\n// import StudentView from '../views/StudentView.vue';\n// import SupportView from '../views/SupportView.vue';\n// import AdminView from '../views/AdminView.vue';\nimport AppHomeView from '../views/AppHomeView.vue';\nimport UserProfile from '../views/UserProfile.vue';\n\nVue.use(VueRouter);\n\nconst routes = [\n  {\n    path: '/',\n    alias: '/home',\n    name: 'AppHomeView',\n    component: AppHomeView,\n  },\n  {\n    path: '/login',\n    name: 'LoginView',\n    component: LoginView,\n  },\n  {\n    path: '/register',\n    name: 'RegisterView',\n    component: RegisterView,\n  },\n  {\n    path: '/student-home',\n    name: 'StudentHome',\n    component: StudentHome,\n  },\n  {\n    path: '/student-create-ticket',\n    name: 'StudentCreateTicket',\n    component: StudentCreateTicket,\n  },\n  {\n    path: '/student-my-tickets',\n    name: 'StudentMyTickets',\n    component: StudentMyTickets,\n  },\n  {\n    path: '/common-faqs',\n    name: 'CommonFAQs',\n    component: CommonFAQs,\n  },\n  {\n    path: '/user-profile',\n    name: 'UserProfile',\n    component: UserProfile,\n  },\n  {\n    path: '*',\n    redirect: '/',\n  },\n];\n\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes,\n});\n\nrouter.beforeEach((to, from, next) => {\n  // redirect to login page if not logged in and trying to access a restricted page\n  const publicPages = ['/login', '/register', '/', '/home'];\n  const authRequired = !publicPages.includes(to.path);\n  if (!store.getters.get_logged_status) {\n    store.commit('initialiseStore');\n  }\n  const logged_status = store.getters.get_logged_status;\n\n  console.log('Routing', from.path, to.path, authRequired, logged_status);\n\n  if (authRequired && !logged_status) {\n    alert(\"Token expired. Please log in again.\");\n    return next('/login');\n  }\n  if (authRequired && logged_status) {\n    const role = store.state.user.role;\n\n    let accesing = \"\";\n    if (common.STUDENT_ROUTES.includes(to.path)) { accesing = \"student\" }\n    if (common.SUPPORT_ROUTES.includes(to.path)) { accesing = \"support\" }\n    if (common.ADMIN_ROUTES.includes(to.path)) { accesing = \"admin\" }\n    console.log('Checking role: ', role, to.path, accesing);\n    console.log('student routes: ', common.STUDENT_ROUTES, to.path);\n    if (role != accesing) {\n      alert(\"You don't have access to this page.\");\n      return next(`/${role}-home`);\n    }\n  }\n  next();\n})\n\n\nexport default router;\n\n// {\n//   path: '/student',\n//   name: 'StudentView',\n//   component: StudentView,\n// },\n// {\n//   path: '/support',\n//   name: 'SupportView',\n//   component: SupportView,\n// },\n// {\n//   path: '/admin',\n//   name: 'AdminView',\n//   component: AdminView,\n// },\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}