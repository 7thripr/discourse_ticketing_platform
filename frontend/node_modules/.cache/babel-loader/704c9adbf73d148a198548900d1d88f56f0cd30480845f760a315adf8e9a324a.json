{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as common from \"../assets/common.js\";\nimport Tagging from \"./Tagging.vue\";\nexport default {\n  name: \"TicketForm\",\n  components: {\n    Tagging\n  },\n  data() {\n    return {\n      priority_options: [{\n        text: \"Low\",\n        value: \"low\"\n      }, {\n        text: \"Medium\",\n        value: \"medium\"\n      }, {\n        text: \"High\",\n        value: \"high\"\n      }],\n      form: {\n        title: \"\",\n        description: \"\",\n        priority: \"low\",\n        tags: [],\n        tag_1: \"\",\n        tag_2: \"\",\n        tag_3: \"\",\n        attachments: [],\n        dummy_file: []\n      },\n      show: true\n    };\n  },\n  methods: {\n    uploadFile() {\n      for (let file of this.$refs[\"file-input\"].files) {\n        dummy_file.push('files', file, file.name); // note, no square-brackets\n      }\n\n      console.log('upload file: ', this.dummy_file);\n    },\n    onSubmit(event) {\n      event.preventDefault();\n      if (this.form.tags.length == 0) {\n        alert(\"Choose atleast 1 tag\");\n      } else {\n        alert('You are creating a new ticket. Click \"Ok\" to proceed?');\n        this.$log.info(\"Submitting ticket form\");\n        const url = common.TICKET_API + `/${this.$store.getters.get_user_id}`;\n        console.log(url);\n        for (let i in this.form.tags) {\n          if (this.form.tags[i]) {\n            this.form[`tag_${parseInt(i) + 1}`] = this.form.tags[i];\n          }\n        }\n        console.log(JSON.stringify(this.form));\n        console.log(this.$refs);\n        let formData = new FormData();\n        formData.append('file', this.dummy_file);\n        formData.append('form', JSON.stringify(this.form)); //JSON.stringify(this.form)\n\n        fetch(url, {\n          method: \"POST\",\n          headers: {\n            // \"Content-Type\": \"application/json\",\n            'Content-Type': 'multipart/form-data',\n            'web_token': this.$store.getters.get_web_token,\n            'user_id': this.$store.getters.get_user_id\n          },\n          body: formData\n        }).then(response => response.text()).then(data => {\n          this.$log.debug(`Success : ${data}`);\n          if (data.category == \"success\") {\n            this.flashMessage.success({\n              message: data.message\n            });\n            this.onReset();\n          }\n          if (data.category == \"error\") {\n            this.flashMessage.error({\n              message: data.message\n            });\n          }\n        }).catch(error => {\n          this.$log.debug(`Error : ${error}`);\n          this.flashMessage.error({\n            message: \"Internal Server Error\"\n          });\n        });\n      }\n    },\n    onReset(event) {\n      event.preventDefault();\n      this.form.title = \"\";\n      this.form.description = \"\";\n      this.form.attachments = [];\n      this.$refs[\"file-input\"].reset();\n      // Trick to reset/clear native browser form validation state\n      this.show = false;\n      this.$nextTick(() => {\n        this.show = true;\n      });\n    },\n    onTagsChanged(value) {\n      this.form.tags = value;\n    }\n  },\n  computed: {\n    check_title() {\n      return this.form.title.length > 20 ? true : false;\n    }\n  }\n};","map":{"version":3,"names":["common","Tagging","name","components","data","priority_options","text","value","form","title","description","priority","tags","tag_1","tag_2","tag_3","attachments","dummy_file","show","methods","uploadFile","file","$refs","files","push","console","log","onSubmit","event","preventDefault","length","alert","$log","info","url","TICKET_API","$store","getters","get_user_id","i","parseInt","JSON","stringify","formData","FormData","append","fetch","method","headers","get_web_token","body","then","response","debug","category","flashMessage","success","message","onReset","error","catch","reset","$nextTick","onTagsChanged","computed","check_title"],"sources":["src/components/TicketForm.vue"],"sourcesContent":["<template>\r\n  <div\r\n    class=\"ticket-form\"\r\n    style=\"margin-top: 5px; margin-left: 5px; margin-right: 5px; text-align: left\"\r\n  >\r\n    <b-form @submit=\"onSubmit\" @reset=\"onReset\" v-if=\"show\">\r\n      <b-form-group\r\n        ><b-form-input\r\n          id=\"input-title\"\r\n          v-model=\"form.title\"\r\n          type=\"text\"\r\n          placeholder=\"Enter title\"\r\n          :state=\"check_title\"\r\n          aria-describedby=\"input-live-feedback-title\"\r\n          required\r\n        ></b-form-input>\r\n        <b-form-invalid-feedback id=\"input-live-feedback-title\">\r\n          Title should be atleast 20 characters long.\r\n        </b-form-invalid-feedback>\r\n      </b-form-group>\r\n\r\n      <b-form-group\r\n        ><b-form-textarea\r\n          id=\"input-description\"\r\n          v-model=\"form.description\"\r\n          type=\"text\"\r\n          placeholder=\"Enter description (Optional)\"\r\n          rows=\"3\"\r\n          max-rows=\"6\"\r\n        ></b-form-textarea\r\n      ></b-form-group>\r\n\r\n      <Tagging @tags_changed=\"onTagsChanged\"></Tagging>\r\n\r\n      <b-form-group label=\"Select priority:\" v-slot=\"{ ariaDescribedby }\">\r\n        <b-form-radio-group\r\n          id=\"radio-group-priority\"\r\n          v-model=\"form.priority\"\r\n          :options=\"priority_options\"\r\n          :aria-describedby=\"ariaDescribedby\"\r\n          name=\"radio-group-priority\"\r\n        ></b-form-radio-group>\r\n      </b-form-group>\r\n\r\n      <b-form-file\r\n        v-model=\"form.attachments\"\r\n        ref=\"file-input\"\r\n        :state=\"Boolean(form.attachments)\"\r\n        placeholder=\"Choose a file or drop it here...\"\r\n        drop-placeholder=\"Drop file here...\"\r\n        accept=\".jpg, .png, .gif\"\r\n        @change=\"uploadFile\"\r\n        multiple\r\n      ></b-form-file>\r\n      <p style=\"font-size: 12px\">Only <code>.jpg, .png, .gif</code> formats are allowed</p>\r\n      <div class=\"mt-2\">\r\n        Selected files:\r\n        <span v-for=\"file in form.attachments\" :key=\"file.name\">{{ file ? file.name : \"\" }}</span>\r\n      </div>\r\n      <br />\r\n\r\n      <br />\r\n      <b-button style=\"margin: 10px\" type=\"submit\" variant=\"primary\">Submit</b-button>\r\n      <b-button style=\"margin: 10px\" type=\"reset\" variant=\"danger\">Reset</b-button>\r\n    </b-form>\r\n    <br />\r\n\r\n    <b-card class=\"mt-3\" header=\"Form Data : Temporary\">\r\n      <pre class=\"m-0\">{{ form }}</pre>\r\n    </b-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as common from \"../assets/common.js\";\r\nimport Tagging from \"./Tagging.vue\";\r\n\r\nexport default {\r\n  name: \"TicketForm\",\r\n  components: { Tagging },\r\n  data() {\r\n    return {\r\n      priority_options: [\r\n        { text: \"Low\", value: \"low\" },\r\n        { text: \"Medium\", value: \"medium\" },\r\n        { text: \"High\", value: \"high\" },\r\n      ],\r\n      form: {\r\n        title: \"\",\r\n        description: \"\",\r\n        priority: \"low\",\r\n        tags: [],\r\n        tag_1: \"\",\r\n        tag_2: \"\",\r\n        tag_3: \"\",\r\n        attachments: [],\r\n        dummy_file: [],\r\n      },\r\n      show: true,\r\n    };\r\n  },\r\n  methods: {\r\n    uploadFile(){\r\nfor (let file of this.$refs[\"file-input\"].files) {\r\n  dummy_file.push('files', file, file.name) // note, no square-brackets\r\n}\r\n              \r\nconsole.log('upload file: ', this.dummy_file);\r\n\r\n    },\r\n    onSubmit(event) {\r\n      event.preventDefault();\r\n\r\n      if (this.form.tags.length == 0) {\r\n        alert(\"Choose atleast 1 tag\");\r\n      } else {\r\n        alert('You are creating a new ticket. Click \"Ok\" to proceed?');\r\n        this.$log.info(\"Submitting ticket form\");\r\n\r\n        const url = common.TICKET_API+`/${this.$store.getters.get_user_id}`;\r\n        console.log(url);\r\n\r\n        for (let i in this.form.tags){\r\n          if (this.form.tags[i]){\r\n            this.form[`tag_${parseInt(i)+1}`] = this.form.tags[i];\r\n          }\r\n        }\r\n        console.log(JSON.stringify(this.form));\r\n\r\n        console.log(this.$refs);\r\n\r\n\r\n        let formData = new FormData();\r\n\t\t\tformData.append('file', this.dummy_file);\r\n\t\t\tformData.append('form', JSON.stringify(this.form)); //JSON.stringify(this.form)\r\n\t\t\t\r\n\r\n        fetch(url, {\r\n          method: \"POST\",\r\n          headers: {\r\n            // \"Content-Type\": \"application/json\",\r\n            'Content-Type': 'multipart/form-data' ,\r\n            'web_token': this.$store.getters.get_web_token,\r\n            'user_id': this.$store.getters.get_user_id,\r\n          },\r\n          body: formData,\r\n        })\r\n          .then((response) => response.text())\r\n          .then((data) => {\r\n            this.$log.debug(`Success : ${data}`);\r\n            if (data.category == \"success\") {\r\n              this.flashMessage.success({\r\n                message: data.message,\r\n              });\r\n              this.onReset();\r\n            }\r\n            if (data.category == \"error\") {\r\n              this.flashMessage.error({\r\n                message: data.message,\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.$log.debug(`Error : ${error}`);\r\n            this.flashMessage.error({\r\n              message: \"Internal Server Error\",\r\n            });\r\n          });\r\n      }\r\n    },\r\n    onReset(event) {\r\n      event.preventDefault();\r\n      this.form.title = \"\";\r\n      this.form.description = \"\";\r\n      this.form.attachments = [];\r\n      this.$refs[\"file-input\"].reset();\r\n      // Trick to reset/clear native browser form validation state\r\n      this.show = false;\r\n      this.$nextTick(() => {\r\n        this.show = true;\r\n      });\r\n    },\r\n    onTagsChanged(value) {\r\n      this.form.tags = value;\r\n\r\n    },\r\n  },\r\n  computed: {\r\n    check_title() {\r\n      return this.form.title.length > 20 ? true : false;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}