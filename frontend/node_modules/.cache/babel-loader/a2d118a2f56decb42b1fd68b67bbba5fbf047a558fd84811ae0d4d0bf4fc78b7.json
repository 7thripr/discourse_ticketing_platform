{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as common from \"../assets/common.js\";\nexport default {\n  components: {},\n  data() {\n    return {\n      attachments: [],\n      user_id: this.$store.getters.get_user_id\n    };\n  },\n  mounted() {},\n  methods: {\n    fileToBase64(file) {\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = error => reject(error);\n      });\n    },\n    checkFileExtension() {},\n    handleFileUpload: async function (event) {\n      const files = event.target.files;\n      console.log(\"files length: \", files.length);\n      for (let i = 0; i < files.length; i++) {\n        try {\n          const result = await this.fileToBase64(files[i]);\n          console.log(\"pushing \", i, \"element\");\n          this.form.attachments.push({\n            user_id: user_id,\n            attachment_loc: result\n          });\n          console.log(\"length \", this.form.attachments.length);\n          // console.log('inside file upload')\n          // console.log('form image: ', JSON.stringify(this.form), '---------');\n\n          this.$emit('file_uploading', this.attachments);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    }\n  },\n  computed: {}\n};","map":{"version":3,"names":["common","components","data","attachments","user_id","$store","getters","get_user_id","mounted","methods","fileToBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","checkFileExtension","handleFileUpload","event","files","target","console","log","length","i","form","push","attachment_loc","$emit","computed"],"sources":["src/components/FileUpload.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div>\r\n      <label\r\n        >Upload files\r\n        <input type=\"file\" @change=\"handleFileUpload($event)\" multiple />\r\n      </label>\r\n      <br />\r\n      <p style=\"font-size: 12px\">Only <code>.jpg, .png, .gif</code> formats are allowed</p>\r\n      <!-- <div class=\"mt-2\">\r\n        Selected files:\r\n        <span v-for=\"(file, index) in form.attachments\" :key=\"index\">{{ file ? file.name : \"\" }}</span>\r\n      </div> -->\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as common from \"../assets/common.js\";\r\n\r\nexport default {\r\n  components: {},\r\n  data() {\r\n    return {\r\n      attachments: [],\r\n      user_id: this.$store.getters.get_user_id,\r\n    };\r\n  },\r\n  mounted() {},\r\n  methods: {\r\n    fileToBase64(file) {\r\n      return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = (error) => reject(error);\r\n      });\r\n    },\r\n    checkFileExtension(){\r\n      \r\n    },\r\n    handleFileUpload: async function (event) {\r\n      const files = event.target.files;\r\n      console.log(\"files length: \", files.length);\r\n      for (let i = 0; i < files.length; i++) {\r\n        try {\r\n          const result = await this.fileToBase64(files[i]);\r\n          console.log(\"pushing \", i, \"element\");\r\n          this.form.attachments.push({user_id:user_id,attachment_loc:result});\r\n          console.log(\"length \", this.form.attachments.length);\r\n          // console.log('inside file upload')\r\n          // console.log('form image: ', JSON.stringify(this.form), '---------');\r\n          \r\n\r\n          this.$emit('file_uploading', this.attachments);\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      }\r\n    },\r\n  },\r\n  computed: {},\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"],"mappings":";AAkBA,YAAAA,MAAA;AAEA;EACAC,UAAA;EACAC,KAAA;IACA;MACAC,WAAA;MACAC,OAAA,OAAAC,MAAA,CAAAC,OAAA,CAAAC;IACA;EACA;EACAC,QAAA;EACAC,OAAA;IACAC,aAAAC,IAAA;MACA,WAAAC,OAAA,EAAAC,OAAA,EAAAC,MAAA;QACA,MAAAC,MAAA,OAAAC,UAAA;QACAD,MAAA,CAAAE,aAAA,CAAAN,IAAA;QACAI,MAAA,CAAAG,MAAA,SAAAL,OAAA,CAAAE,MAAA,CAAAI,MAAA;QACAJ,MAAA,CAAAK,OAAA,GAAAC,KAAA,IAAAP,MAAA,CAAAO,KAAA;MACA;IACA;IACAC,mBAAA,GAEA;IACAC,gBAAA,iBAAAA,CAAAC,KAAA;MACA,MAAAC,KAAA,GAAAD,KAAA,CAAAE,MAAA,CAAAD,KAAA;MACAE,OAAA,CAAAC,GAAA,mBAAAH,KAAA,CAAAI,MAAA;MACA,SAAAC,CAAA,MAAAA,CAAA,GAAAL,KAAA,CAAAI,MAAA,EAAAC,CAAA;QACA;UACA,MAAAX,MAAA,cAAAT,YAAA,CAAAe,KAAA,CAAAK,CAAA;UACAH,OAAA,CAAAC,GAAA,aAAAE,CAAA;UACA,KAAAC,IAAA,CAAA5B,WAAA,CAAA6B,IAAA;YAAA5B,OAAA,EAAAA,OAAA;YAAA6B,cAAA,EAAAd;UAAA;UACAQ,OAAA,CAAAC,GAAA,iBAAAG,IAAA,CAAA5B,WAAA,CAAA0B,MAAA;UACA;UACA;;UAGA,KAAAK,KAAA,wBAAA/B,WAAA;QACA,SAAAkB,KAAA;UACAM,OAAA,CAAAN,KAAA,CAAAA,KAAA;QACA;MACA;IACA;EACA;EACAc,QAAA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}