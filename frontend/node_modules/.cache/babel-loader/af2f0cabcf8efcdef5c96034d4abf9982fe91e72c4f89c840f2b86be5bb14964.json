{"ast":null,"code":"import UserNavbar from \"../components/UserNavbar.vue\";\nimport * as common from \"../assets/common.js\";\nimport TicketCard from \"../components/TicketCard.vue\";\nimport InfoCard from \"../components/InfoCard.vue\";\nexport default {\n  name: \"StudentHome\",\n  components: {\n    UserNavbar,\n    TicketCard,\n    InfoCard\n  },\n  data() {\n    return {\n      n_tickets_created: 0,\n      n_tickets_resolved: 0,\n      n_tickets_pending: 0,\n      n_tickets_upvoted: 0,\n      user_id: this.$store.getters.get_user_id,\n      ticket_card_details: []\n    };\n  },\n  created() {\n    let form = {\n      filter_status: [\"pending\"]\n    };\n    let params = \"\";\n    params = new URLSearchParams(form).toString();\n    console.log(\"params: \", params);\n    fetch(common.STUDENT_API + `/${this.user_id}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        web_token: this.$store.getters.get_web_token,\n        user_id: this.user_id\n      }\n    }).then(response => response.json()).then(data => {\n      this.$log.debug(`Success : ${data}`);\n      if (data.category == \"success\") {\n        this.flashMessage.success({\n          message: \"User data retrieved.\"\n        });\n        this.n_tickets_created = data.message.n_tickets_created;\n        this.n_tickets_resolved = data.message.n_tickets_resolved;\n        this.n_tickets_pending = data.message.n_tickets_pending;\n        this.n_tickets_upvoted = data.message.n_tickets_upvoted;\n        this.ticket_card_details = data.message;\n      }\n      if (data.category == \"error\") {\n        this.flashMessage.error({\n          message: data.message\n        });\n      }\n    }).catch(error => {\n      this.$log.debug(`Error : ${error}`);\n      this.flashMessage.error({\n        message: \"Internal Server Error\"\n      });\n    });\n    fetch(common.TICKET_API_ALLTICKETS + `/${this.user_id}` + \"?\" + params, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        web_token: this.$store.getters.get_web_token,\n        user_id: this.user_id\n      }\n    }).then(response => response.json()).then(data => {\n      this.$log.debug(`Success : ${data}`);\n      if (data.category == \"success\") {\n        this.flashMessage.success({\n          message: \"Tickets retrieved.\"\n        });\n        this.ticket_card_details = data.message;\n        console.log(\"total unresolved tickets: \", this.ticket_card_details.length);\n      }\n      if (data.category == \"error\") {\n        this.flashMessage.error({\n          message: data.message\n        });\n      }\n    }).catch(error => {\n      this.$log.debug(`Error : ${error}`);\n      this.flashMessage.error({\n        message: \"Internal Server Error\"\n      });\n    });\n  },\n  mounted() {},\n  methods: {},\n  computed: {}\n};","map":{"version":3,"names":["UserNavbar","common","TicketCard","InfoCard","name","components","data","n_tickets_created","n_tickets_resolved","n_tickets_pending","n_tickets_upvoted","user_id","$store","getters","get_user_id","ticket_card_details","created","form","filter_status","params","URLSearchParams","toString","console","log","fetch","STUDENT_API","method","headers","web_token","get_web_token","then","response","json","$log","debug","category","flashMessage","success","message","error","catch","TICKET_API_ALLTICKETS","length","mounted","methods","computed"],"sources":["src/views/StudentHome.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <UserNavbar :id_=\"1\"></UserNavbar>\r\n\r\n    <b-container fluid=\"xl\">\r\n      <b-row class=\"text-start\">\r\n        <b-col cols=\"12\" sm=\"7\" md=\"8\">\r\n          <h3 style=\"text-align: center\">My Unresolved Tickets</h3>\r\n          <div style=\"height: 550px; overflow: auto; padding: 10px\">\r\n            <div v-for=\"ticket in ticket_card_details\" :key=\"ticket.ticket_id\">\r\n              <TicketCard\r\n                :ticket_id=\"ticket.ticket_id\"\r\n                :created_on=\"ticket.created_on\"\r\n                :title=\"ticket.title\"\r\n                :description=\"ticket.description\"\r\n                :votes=\"ticket.votes\"\r\n                :created_by=\"ticket.created_by\"\r\n                :upvote_disabled=\"true\"\r\n                :delete_disabled=\"false\"\r\n                :edit_disabled=\"false\"\r\n              ></TicketCard>\r\n            </div>\r\n          </div>\r\n        </b-col>\r\n        <b-col cols=\"12\" sm=\"5\" md=\"4\" style=\"border-left: dashed black\">\r\n          <h3 style=\"text-align: center\">My Activity</h3>\r\n          <InfoCard title=\"tickets created\" :value=\"n_tickets_created.toString()\"></InfoCard>\r\n          <InfoCard title=\"tickets resolved\" :value=\"n_tickets_resolved.toString()\"></InfoCard>\r\n          <InfoCard title=\"tickets pending\" :value=\"n_tickets_pending.toString()\"></InfoCard>\r\n          <InfoCard title=\"tickets upvoted\" :value=\"n_tickets_upvoted.toString()\"></InfoCard>\r\n        </b-col>\r\n      </b-row>\r\n    </b-container>\r\n\r\n    <br />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport UserNavbar from \"../components/UserNavbar.vue\";\r\nimport * as common from \"../assets/common.js\";\r\nimport TicketCard from \"../components/TicketCard.vue\";\r\nimport InfoCard from \"../components/InfoCard.vue\";\r\n\r\nexport default {\r\n  name: \"StudentHome\",\r\n  components: { UserNavbar, TicketCard, InfoCard },\r\n  data() {\r\n    return {\r\n      n_tickets_created: 0,\r\n      n_tickets_resolved: 0,\r\n      n_tickets_pending: 0,\r\n      n_tickets_upvoted: 0,\r\n      user_id: this.$store.getters.get_user_id,\r\n      ticket_card_details: [],\r\n    };\r\n  },\r\n  created() {\r\n    let form = {\r\n      filter_status: [\"pending\"],\r\n    };\r\n    let params = \"\";\r\n    params = new URLSearchParams(form).toString();\r\n    console.log(\"params: \", params);\r\n\r\n    fetch(common.STUDENT_API + `/${this.user_id}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        web_token: this.$store.getters.get_web_token,\r\n        user_id: this.user_id,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.$log.debug(`Success : ${data}`);\r\n        if (data.category == \"success\") {\r\n          this.flashMessage.success({\r\n            message: \"User data retrieved.\",\r\n          });\r\n          this.n_tickets_created = data.message.n_tickets_created;\r\n          this.n_tickets_resolved = data.message.n_tickets_resolved;\r\n          this.n_tickets_pending = data.message.n_tickets_pending;\r\n          this.n_tickets_upvoted = data.message.n_tickets_upvoted;\r\n          this.ticket_card_details = data.message;\r\n        }\r\n        if (data.category == \"error\") {\r\n          this.flashMessage.error({\r\n            message: data.message,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.$log.debug(`Error : ${error}`);\r\n        this.flashMessage.error({\r\n          message: \"Internal Server Error\",\r\n        });\r\n      });\r\n\r\n    fetch(common.TICKET_API_ALLTICKETS + `/${this.user_id}` + \"?\" + params, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        web_token: this.$store.getters.get_web_token,\r\n        user_id: this.user_id,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.$log.debug(`Success : ${data}`);\r\n        if (data.category == \"success\") {\r\n          this.flashMessage.success({\r\n            message: \"Tickets retrieved.\",\r\n          });\r\n\r\n          this.ticket_card_details = data.message;\r\n          console.log(\"total unresolved tickets: \", this.ticket_card_details.length);\r\n        }\r\n        if (data.category == \"error\") {\r\n          this.flashMessage.error({\r\n            message: data.message,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.$log.debug(`Error : ${error}`);\r\n        this.flashMessage.error({\r\n          message: \"Internal Server Error\",\r\n        });\r\n      });\r\n  },\r\n  mounted() {},\r\n  methods: {},\r\n  computed: {},\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"],"mappings":"AAuCA,OAAAA,UAAA;AACA,YAAAC,MAAA;AACA,OAAAC,UAAA;AACA,OAAAC,QAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IAAAL,UAAA;IAAAE,UAAA;IAAAC;EAAA;EACAG,KAAA;IACA;MACAC,iBAAA;MACAC,kBAAA;MACAC,iBAAA;MACAC,iBAAA;MACAC,OAAA,OAAAC,MAAA,CAAAC,OAAA,CAAAC,WAAA;MACAC,mBAAA;IACA;EACA;EACAC,QAAA;IACA,IAAAC,IAAA;MACAC,aAAA;IACA;IACA,IAAAC,MAAA;IACAA,MAAA,OAAAC,eAAA,CAAAH,IAAA,EAAAI,QAAA;IACAC,OAAA,CAAAC,GAAA,aAAAJ,MAAA;IAEAK,KAAA,CAAAvB,MAAA,CAAAwB,WAAA,YAAAd,OAAA;MACAe,MAAA;MACAC,OAAA;QACA;QACAC,SAAA,OAAAhB,MAAA,CAAAC,OAAA,CAAAgB,aAAA;QACAlB,OAAA,OAAAA;MACA;IACA,GACAmB,IAAA,CAAAC,QAAA,IAAAA,QAAA,CAAAC,IAAA,IACAF,IAAA,CAAAxB,IAAA;MACA,KAAA2B,IAAA,CAAAC,KAAA,cAAA5B,IAAA;MACA,IAAAA,IAAA,CAAA6B,QAAA;QACA,KAAAC,YAAA,CAAAC,OAAA;UACAC,OAAA;QACA;QACA,KAAA/B,iBAAA,GAAAD,IAAA,CAAAgC,OAAA,CAAA/B,iBAAA;QACA,KAAAC,kBAAA,GAAAF,IAAA,CAAAgC,OAAA,CAAA9B,kBAAA;QACA,KAAAC,iBAAA,GAAAH,IAAA,CAAAgC,OAAA,CAAA7B,iBAAA;QACA,KAAAC,iBAAA,GAAAJ,IAAA,CAAAgC,OAAA,CAAA5B,iBAAA;QACA,KAAAK,mBAAA,GAAAT,IAAA,CAAAgC,OAAA;MACA;MACA,IAAAhC,IAAA,CAAA6B,QAAA;QACA,KAAAC,YAAA,CAAAG,KAAA;UACAD,OAAA,EAAAhC,IAAA,CAAAgC;QACA;MACA;IACA,GACAE,KAAA,CAAAD,KAAA;MACA,KAAAN,IAAA,CAAAC,KAAA,YAAAK,KAAA;MACA,KAAAH,YAAA,CAAAG,KAAA;QACAD,OAAA;MACA;IACA;IAEAd,KAAA,CAAAvB,MAAA,CAAAwC,qBAAA,YAAA9B,OAAA,WAAAQ,MAAA;MACAO,MAAA;MACAC,OAAA;QACA;QACAC,SAAA,OAAAhB,MAAA,CAAAC,OAAA,CAAAgB,aAAA;QACAlB,OAAA,OAAAA;MACA;IACA,GACAmB,IAAA,CAAAC,QAAA,IAAAA,QAAA,CAAAC,IAAA,IACAF,IAAA,CAAAxB,IAAA;MACA,KAAA2B,IAAA,CAAAC,KAAA,cAAA5B,IAAA;MACA,IAAAA,IAAA,CAAA6B,QAAA;QACA,KAAAC,YAAA,CAAAC,OAAA;UACAC,OAAA;QACA;QAEA,KAAAvB,mBAAA,GAAAT,IAAA,CAAAgC,OAAA;QACAhB,OAAA,CAAAC,GAAA,oCAAAR,mBAAA,CAAA2B,MAAA;MACA;MACA,IAAApC,IAAA,CAAA6B,QAAA;QACA,KAAAC,YAAA,CAAAG,KAAA;UACAD,OAAA,EAAAhC,IAAA,CAAAgC;QACA;MACA;IACA,GACAE,KAAA,CAAAD,KAAA;MACA,KAAAN,IAAA,CAAAC,KAAA,YAAAK,KAAA;MACA,KAAAH,YAAA,CAAAG,KAAA;QACAD,OAAA;MACA;IACA;EACA;EACAK,QAAA;EACAC,OAAA;EACAC,QAAA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}