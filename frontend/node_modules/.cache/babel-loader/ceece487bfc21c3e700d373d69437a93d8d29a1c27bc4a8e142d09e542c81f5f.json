{"ast":null,"code":"import Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport LoginView from '../views/LoginView.vue';\nimport RegisterView from '../views/RegisterView.vue';\nimport store from '../store';\nimport * as common from \"../assets/common.js\";\nimport TicketForm from '../components/TicketForm.vue';\nimport SearchTicket from '../components/SearchTicket.vue';\nimport StudentHome from '../components/StudentHome.vue';\nVue.use(VueRouter);\nconst routes = [{\n  path: '/student',\n  name: 'StudentView',\n  component: () => import('../views/StudentView.vue')\n}, {\n  path: '/support',\n  name: 'SupportView',\n  component: () => import('../views/SupportView.vue')\n}, {\n  path: '/admin',\n  name: 'AdminView',\n  component: () => import('../views/AdminView.vue')\n}, {\n  path: '/login',\n  name: 'LoginView',\n  component: LoginView\n  // alias: '/',\n}, {\n  path: '/',\n  name: 'SearchTicket',\n  component: SearchTicket\n}, {\n  path: '/student-home',\n  name: 'StudentHome',\n  component: StudentHome\n}, {\n  path: '/register',\n  name: 'RegisterView',\n  component: RegisterView\n}, {\n  path: '*',\n  redirect: '/login'\n}];\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  // redirect to login page if not logged in and trying to access a restricted page\n  const publicPages = ['/login', '/register', '/'];\n  const authRequired = !publicPages.includes(to.path);\n  if (!store.getters.get_logged_status) {\n    store.commit('initialiseStore');\n  }\n  const logged_status = store.getters.get_logged_status;\n  console.log('Routing', from.path, to.path, authRequired, logged_status);\n  if (authRequired && !logged_status) {\n    alert(\"Token expired. Please log in again.\");\n    return next('/login');\n  }\n  if (authRequired && logged_status) {\n    const role = store.state.user.role;\n    let accesing = \"\";\n    if (common.STUDENT_ROUTES.includes(to.path)) {\n      accesing = \"student\";\n    }\n    if (common.SUPPORT_ROUTES.includes(to.path)) {\n      accesing = \"support\";\n    }\n    if (common.ADMIN_ROUTES.includes(to.path)) {\n      accesing = \"admin\";\n    }\n    console.log('Checking role: ', role, to.path, accesing);\n    if (role != accesing) {\n      alert(\"You don't have access to this page.\");\n      return next(`/${role}`);\n    }\n  }\n  next();\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","LoginView","RegisterView","store","common","TicketForm","SearchTicket","StudentHome","use","routes","path","name","component","redirect","router","mode","base","process","env","BASE_URL","beforeEach","to","from","next","publicPages","authRequired","includes","getters","get_logged_status","commit","logged_status","console","log","alert","role","state","user","accesing","STUDENT_ROUTES","SUPPORT_ROUTES","ADMIN_ROUTES"],"sources":["D:/IITM_exam/IITM_Term_7/SE_Project/Tushar_Work/code/frontend/src/router/index.js"],"sourcesContent":["import Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport LoginView from '../views/LoginView.vue';\nimport RegisterView from '../views/RegisterView.vue';\nimport store from '../store';\nimport * as common from \"../assets/common.js\";\nimport TicketForm from '../components/TicketForm.vue';\nimport SearchTicket from '../components/SearchTicket.vue';\nimport StudentHome from '../components/StudentHome.vue';\n\nVue.use(VueRouter);\n\nconst routes = [\n  {\n    path: '/student',\n    name: 'StudentView',\n    component: () => import('../views/StudentView.vue'),\n  },\n  {\n    path: '/support',\n    name: 'SupportView',\n    component: () => import('../views/SupportView.vue'),\n  },\n  {\n    path: '/admin',\n    name: 'AdminView',\n    component: () => import('../views/AdminView.vue'),\n  },\n  {\n    path: '/login',\n    name: 'LoginView',\n    component: LoginView,\n    // alias: '/',\n  },\n  {\n    path: '/',\n    name: 'SearchTicket',\n    component: SearchTicket,\n  },\n  {\n    path: '/student-home',\n    name: 'StudentHome',\n    component: StudentHome,\n  },\n  {\n    path: '/register',\n    name: 'RegisterView',\n    component: RegisterView,\n  },\n  { path: '*', redirect: '/login', }\n];\n\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes,\n});\n\nrouter.beforeEach((to, from, next) => {\n  // redirect to login page if not logged in and trying to access a restricted page\n  const publicPages = ['/login', '/register', '/'];\n  const authRequired = !publicPages.includes(to.path);\n  if (!store.getters.get_logged_status){\n    store.commit('initialiseStore');\n  }\n  const logged_status = store.getters.get_logged_status;\n  \n  console.log('Routing', from.path, to.path, authRequired, logged_status);\n\n  if (authRequired && !logged_status) {\n    alert(\"Token expired. Please log in again.\");\n    return next('/login');\n  }\n  if (authRequired && logged_status) {\n    const role = store.state.user.role;\n    \n    let accesing = \"\";\n    if (common.STUDENT_ROUTES.includes(to.path)) { accesing = \"student\"}\n    if (common.SUPPORT_ROUTES.includes(to.path)) { accesing = \"support\"}\n    if (common.ADMIN_ROUTES.includes(to.path)) { accesing = \"admin\"}\n    console.log('Checking role: ', role, to.path, accesing);\n    if (role != accesing){\n    alert(\"You don't have access to this page.\");\n    return next(`/${role}`);\n    }\n  }\n  next();\n})\n\n\nexport default router;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}