{"ast":null,"code":"import * as common from \"../assets/common.js\";\nexport default {\n  components: {},\n  data() {\n    return {\n      file: ''\n    };\n  },\n  mounted() {},\n  methods: {\n    handleFileUpload(event) {\n      this.file = event.target.files[0];\n    },\n    uploadFile() {\n      let formData = new FormData();\n      formData.append(\"file\", this.file);\n      console.log(formData);\n      fetch(common.TICKET_API + `/${this.$store.getters.get_user_id}`, {\n        method: \"POST\",\n        headers: {\n          // \"Content-Type\": \"application/json\",\n          \"Content-Type\": \"multipart/form-data\",\n          web_token: this.$store.getters.get_web_token,\n          user_id: this.$store.getters.get_user_id\n        },\n        body: formData\n      }).then(response => response.text()).then(data => {\n        this.$log.debug(`Success : ${data}`);\n        if (data.category == \"success\") {\n          this.flashMessage.success({\n            message: data.message\n          });\n          this.onReset();\n        }\n        if (data.category == \"error\") {\n          this.flashMessage.error({\n            message: data.message\n          });\n        }\n      }).catch(error => {\n        this.$log.debug(`Error : ${error}`);\n        this.flashMessage.error({\n          message: \"Internal Server Error\"\n        });\n      });\n    }\n  },\n  computed: {}\n};","map":{"version":3,"names":["common","components","data","file","mounted","methods","handleFileUpload","event","target","files","uploadFile","formData","FormData","append","console","log","fetch","TICKET_API","$store","getters","get_user_id","method","headers","web_token","get_web_token","user_id","body","then","response","text","$log","debug","category","flashMessage","success","message","onReset","error","catch","computed"],"sources":["src/components/FileUpload.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div>\r\n      <h2>Single File</h2>\r\n      <hr />\r\n      \r\n    <form method=post enctype=multipart/form-data>\r\n      <label\r\n        >File\r\n        <input type=\"file\" @change=\"handleFileUpload($event)\" />\r\n      </label>\r\n      <br />\r\n      <button type=submit v-on:click=\"uploadFile()\">Submit</button>\r\n    </form>\r\n\r\n      \r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as common from \"../assets/common.js\";\r\n\r\nexport default {\r\n  components: {},\r\n  data() {\r\n    return {\r\n      file:'',\r\n    };\r\n  },\r\n  mounted() {},\r\n  methods: {\r\n    handleFileUpload(event) {\r\n      this.file = event.target.files[0];\r\n    },\r\n    uploadFile() {\r\n      let formData = new FormData();\r\n      formData.append(\"file\", this.file);\r\n      console.log(formData);\r\n\r\n      fetch(common.TICKET_API + `/${this.$store.getters.get_user_id}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          // \"Content-Type\": \"application/json\",\r\n          \"Content-Type\": \"multipart/form-data\",\r\n          web_token: this.$store.getters.get_web_token,\r\n          user_id: this.$store.getters.get_user_id,\r\n        },\r\n        body: formData,\r\n      })\r\n        .then((response) => response.text())\r\n        .then((data) => {\r\n          this.$log.debug(`Success : ${data}`);\r\n          if (data.category == \"success\") {\r\n            this.flashMessage.success({\r\n              message: data.message,\r\n            });\r\n            this.onReset();\r\n          }\r\n          if (data.category == \"error\") {\r\n            this.flashMessage.error({\r\n              message: data.message,\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.$log.debug(`Error : ${error}`);\r\n          this.flashMessage.error({\r\n            message: \"Internal Server Error\",\r\n          });\r\n        });\r\n    },\r\n  },\r\n  computed: {},\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"],"mappings":"AAqBA,YAAAA,MAAA;AAEA;EACAC,UAAA;EACAC,KAAA;IACA;MACAC,IAAA;IACA;EACA;EACAC,QAAA;EACAC,OAAA;IACAC,iBAAAC,KAAA;MACA,KAAAJ,IAAA,GAAAI,KAAA,CAAAC,MAAA,CAAAC,KAAA;IACA;IACAC,WAAA;MACA,IAAAC,QAAA,OAAAC,QAAA;MACAD,QAAA,CAAAE,MAAA,cAAAV,IAAA;MACAW,OAAA,CAAAC,GAAA,CAAAJ,QAAA;MAEAK,KAAA,CAAAhB,MAAA,CAAAiB,UAAA,YAAAC,MAAA,CAAAC,OAAA,CAAAC,WAAA;QACAC,MAAA;QACAC,OAAA;UACA;UACA;UACAC,SAAA,OAAAL,MAAA,CAAAC,OAAA,CAAAK,aAAA;UACAC,OAAA,OAAAP,MAAA,CAAAC,OAAA,CAAAC;QACA;QACAM,IAAA,EAAAf;MACA,GACAgB,IAAA,CAAAC,QAAA,IAAAA,QAAA,CAAAC,IAAA,IACAF,IAAA,CAAAzB,IAAA;QACA,KAAA4B,IAAA,CAAAC,KAAA,cAAA7B,IAAA;QACA,IAAAA,IAAA,CAAA8B,QAAA;UACA,KAAAC,YAAA,CAAAC,OAAA;YACAC,OAAA,EAAAjC,IAAA,CAAAiC;UACA;UACA,KAAAC,OAAA;QACA;QACA,IAAAlC,IAAA,CAAA8B,QAAA;UACA,KAAAC,YAAA,CAAAI,KAAA;YACAF,OAAA,EAAAjC,IAAA,CAAAiC;UACA;QACA;MACA,GACAG,KAAA,CAAAD,KAAA;QACA,KAAAP,IAAA,CAAAC,KAAA,YAAAM,KAAA;QACA,KAAAJ,YAAA,CAAAI,KAAA;UACAF,OAAA;QACA;MACA;IACA;EACA;EACAI,QAAA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}