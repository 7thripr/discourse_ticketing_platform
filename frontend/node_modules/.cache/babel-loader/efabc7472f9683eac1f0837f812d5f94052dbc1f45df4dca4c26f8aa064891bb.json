{"ast":null,"code":"import * as common from \"../assets/common.js\";\nimport FileUpload from \"./FileUpload.vue\";\nimport Tagging from \"./Tagging.vue\";\nexport default {\n  name: \"TicketForm\",\n  components: {\n    Tagging,\n    FileUpload\n  },\n  data() {\n    return {\n      filter_priority_options: [{\n        item: \"low\",\n        name: \"Low\"\n      }, {\n        item: \"medium\",\n        name: \"Medium\"\n      }, {\n        item: \"high\",\n        name: \"High\"\n      }],\n      filter_status_options: [{\n        item: \"pending\",\n        name: \"Pending\"\n      }, {\n        item: \"resolved\",\n        name: \"Resolved\"\n      }],\n      sort_by_options: [{\n        value: \"created_on\",\n        text: \"Created Date\"\n      }, {\n        value: \"resolved_on\",\n        text: \"Resolved Date\"\n      }, {\n        value: \"votes\",\n        text: \"Votes\"\n      }],\n      sort_dir_options: [{\n        value: \"asc\",\n        text: \"Ascending\"\n      }, {\n        value: \"desc\",\n        text: \"Descending\"\n      }],\n      form: {\n        query: \"\",\n        filter_priority: [],\n        filter_status: [],\n        sortby: null,\n        sortdir: null\n      },\n      show: true\n    };\n  },\n  methods: {\n    onSubmit(event) {\n      if (event && event.preventDefault) {\n        event.preventDefault();\n      }\n      // convert form to query params\n      let params = \"\";\n      params = new URLSearchParams(this.form);\n      console.log('params: ', params);\n\n      // console.log(JSON.stringify(this.form));\n      fetch(common.TICKET_API_ALLTICKETS, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          web_token: this.$store.getters.get_web_token,\n          user_id: this.$store.getters.get_user_id\n        }\n      }).then(response => response.json()).then(data => {\n        this.$log.debug(`Success : ${data}`);\n        if (data.category == \"success\") {\n          this.flashMessage.success({\n            message: data.message\n          });\n        }\n        if (data.category == \"error\") {\n          this.flashMessage.error({\n            message: data.message\n          });\n        }\n      }).catch(error => {\n        this.$log.debug(`Error : ${error}`);\n        this.flashMessage.error({\n          message: \"Internal Server Error\"\n        });\n      });\n    },\n    onReset(event) {\n      if (event && event.preventDefault) {\n        event.preventDefault();\n      }\n      this.form.query = \"\";\n      this.form.sortby = null;\n      this.form.sortdir = null;\n      this.form.filter_status = [];\n      this.form.filter_priority = [];\n      this.show = false;\n      this.$nextTick(() => {\n        this.show = true;\n      });\n    }\n  },\n  computed: {\n    check_query() {\n      return this.form.query.length > 0 ? true : false;\n    }\n  }\n};","map":{"version":3,"names":["common","FileUpload","Tagging","name","components","data","filter_priority_options","item","filter_status_options","sort_by_options","value","text","sort_dir_options","form","query","filter_priority","filter_status","sortby","sortdir","show","methods","onSubmit","event","preventDefault","params","URLSearchParams","console","log","fetch","TICKET_API_ALLTICKETS","method","headers","web_token","$store","getters","get_web_token","user_id","get_user_id","then","response","json","$log","debug","category","flashMessage","success","message","error","catch","onReset","$nextTick","computed","check_query","length"],"sources":["src/components/SearchTicket.vue"],"sourcesContent":["<template>\r\n  <div\r\n    class=\"search-ticket-form\"\r\n    style=\"margin-top: 5px; margin-left: 5px; margin-right: 5px; text-align: left\"\r\n  >\r\n    <b-form @submit=\"onSubmit\" @reset=\"onReset\" v-if=\"show\">\r\n      <b-container class=\"search-filters\" style=\"margin: 5px; padding: 5px\">\r\n        <b-row class=\"row\">\r\n          <b-col class=\"col\" cols=\"12\" md=\"12\" sm=\"12\">\r\n            <b-form-group\r\n              ><b-form-input\r\n                id=\"input-query\"\r\n                v-model=\"form.query\"\r\n                type=\"text\"\r\n                placeholder=\"Enter search query\"\r\n                :state=\"check_query\"\r\n                aria-describedby=\"input-live-feedback-query\"\r\n                required\r\n              ></b-form-input>\r\n              <b-form-invalid-feedback id=\"input-live-feedback-query\">\r\n                Query should be atleast 1 characters long.\r\n              </b-form-invalid-feedback>\r\n            </b-form-group>\r\n          </b-col></b-row\r\n        >\r\n\r\n        <b-row class=\"row\">\r\n          <b-col class=\"col\" cols=\"12\" md=\"7\" sm=\"12\">\r\n            <b-form-group id=\"input-sort\" label=\"Sort By: \" label-for=\"input-sort\">\r\n              <b-form-select\r\n                id=\"input-sort\"\r\n                v-model=\"form.sortby\"\r\n                :options=\"sort_by_options\"\r\n              ></b-form-select>\r\n            </b-form-group>\r\n          </b-col>\r\n          <b-col class=\"col\" cols=\"12\" md=\"5\" sm=\"12\">\r\n            <b-form-group id=\"input-sort-dir\" label=\"Sort Direction: \" label-for=\"input-sort-dir\">\r\n              <b-form-select\r\n                id=\"input-sort-dir\"\r\n                v-model=\"form.sortdir\"\r\n                :options=\"sort_dir_options\"\r\n              ></b-form-select>\r\n            </b-form-group>\r\n          </b-col>\r\n        </b-row>\r\n        <b-row class=\"row\">\r\n          <b-col class=\"col\" cols=\"12\" md=\"7\" sm=\"12\">\r\n            <b-form-group label=\"Filter Priority:\">\r\n              <b-form-checkbox-group\r\n                v-model=\"form.filter_priority\"\r\n                :options=\"filter_priority_options\"\r\n                value-field=\"item\"\r\n                text-field=\"name\"\r\n              ></b-form-checkbox-group\r\n            ></b-form-group>\r\n          </b-col>\r\n          <b-col class=\"col\" cols=\"12\" md=\"5\" sm=\"12\">\r\n            <b-form-group label=\"Filter Status:\">\r\n              <b-form-checkbox-group\r\n                v-model=\"form.filter_status\"\r\n                :options=\"filter_status_options\"\r\n                value-field=\"item\"\r\n                text-field=\"name\"\r\n              ></b-form-checkbox-group\r\n            ></b-form-group>\r\n          </b-col>\r\n        </b-row>\r\n      </b-container>\r\n\r\n      <br />\r\n\r\n      <br />\r\n      <b-button style=\"margin: 10px\" type=\"submit\" variant=\"primary\">Submit</b-button>\r\n      <b-button style=\"margin: 10px\" type=\"reset\" variant=\"danger\">Reset</b-button>\r\n    </b-form>\r\n    <br />\r\n    <!-- show results here -->\r\n\r\n    <b-card class=\"mt-3\" header=\"Form Data : Temporary\">\r\n      <pre class=\"m-0\">{{ form }}</pre>\r\n    </b-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as common from \"../assets/common.js\";\r\nimport FileUpload from \"./FileUpload.vue\";\r\nimport Tagging from \"./Tagging.vue\";\r\n\r\nexport default {\r\n  name: \"TicketForm\",\r\n  components: { Tagging, FileUpload },\r\n  data() {\r\n    return {\r\n      filter_priority_options: [\r\n        { item: \"low\", name: \"Low\" },\r\n        { item: \"medium\", name: \"Medium\" },\r\n        { item: \"high\", name: \"High\" },\r\n      ],\r\n      filter_status_options: [\r\n        { item: \"pending\", name: \"Pending\" },\r\n        { item: \"resolved\", name: \"Resolved\" },\r\n      ],\r\n\r\n      sort_by_options: [\r\n        { value: \"created_on\", text: \"Created Date\" },\r\n        { value: \"resolved_on\", text: \"Resolved Date\" },\r\n        { value: \"votes\", text: \"Votes\" },\r\n      ],\r\n      sort_dir_options: [\r\n        { value: \"asc\", text: \"Ascending\" },\r\n        { value: \"desc\", text: \"Descending\" },\r\n      ],\r\n      form: {\r\n        query: \"\",\r\n        filter_priority: [],\r\n        filter_status: [],\r\n        sortby: null,\r\n        sortdir: null,\r\n      },\r\n      show: true,\r\n    };\r\n  },\r\n  methods: {\r\n    onSubmit(event) {\r\n      if (event && event.preventDefault) {\r\n        event.preventDefault();\r\n      }\r\n      // convert form to query params\r\n      let params = \"\";\r\n      params = new URLSearchParams(this.form);\r\n      console.log('params: ', params);\r\n\r\n      // console.log(JSON.stringify(this.form));\r\n      fetch(common.TICKET_API_ALLTICKETS, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          web_token: this.$store.getters.get_web_token,\r\n          user_id: this.$store.getters.get_user_id,\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.$log.debug(`Success : ${data}`);\r\n          if (data.category == \"success\") {\r\n            this.flashMessage.success({\r\n              message: data.message,\r\n            });\r\n          }\r\n          if (data.category == \"error\") {\r\n            this.flashMessage.error({\r\n              message: data.message,\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.$log.debug(`Error : ${error}`);\r\n          this.flashMessage.error({\r\n            message: \"Internal Server Error\",\r\n          });\r\n        });\r\n    },\r\n    onReset(event) {\r\n      if (event && event.preventDefault) {\r\n        event.preventDefault();\r\n      }\r\n      this.form.query = \"\";\r\n      this.form.sortby = null;\r\n      this.form.sortdir = null;\r\n      this.form.filter_status = [];\r\n      this.form.filter_priority = [];\r\n      this.show = false;\r\n      this.$nextTick(() => {\r\n        this.show = true;\r\n      });\r\n    },\r\n  },\r\n  computed: {\r\n    check_query() {\r\n      return this.form.query.length > 0 ? true : false;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"],"mappings":"AAsFA,YAAAA,MAAA;AACA,OAAAC,UAAA;AACA,OAAAC,OAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IAAAF,OAAA;IAAAD;EAAA;EACAI,KAAA;IACA;MACAC,uBAAA,GACA;QAAAC,IAAA;QAAAJ,IAAA;MAAA,GACA;QAAAI,IAAA;QAAAJ,IAAA;MAAA,GACA;QAAAI,IAAA;QAAAJ,IAAA;MAAA,EACA;MACAK,qBAAA,GACA;QAAAD,IAAA;QAAAJ,IAAA;MAAA,GACA;QAAAI,IAAA;QAAAJ,IAAA;MAAA,EACA;MAEAM,eAAA,GACA;QAAAC,KAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,IAAA;MAAA,EACA;MACAC,gBAAA,GACA;QAAAF,KAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,IAAA;MAAA,EACA;MACAE,IAAA;QACAC,KAAA;QACAC,eAAA;QACAC,aAAA;QACAC,MAAA;QACAC,OAAA;MACA;MACAC,IAAA;IACA;EACA;EACAC,OAAA;IACAC,SAAAC,KAAA;MACA,IAAAA,KAAA,IAAAA,KAAA,CAAAC,cAAA;QACAD,KAAA,CAAAC,cAAA;MACA;MACA;MACA,IAAAC,MAAA;MACAA,MAAA,OAAAC,eAAA,MAAAZ,IAAA;MACAa,OAAA,CAAAC,GAAA,aAAAH,MAAA;;MAEA;MACAI,KAAA,CAAA5B,MAAA,CAAA6B,qBAAA;QACAC,MAAA;QACAC,OAAA;UACA;UACAC,SAAA,OAAAC,MAAA,CAAAC,OAAA,CAAAC,aAAA;UACAC,OAAA,OAAAH,MAAA,CAAAC,OAAA,CAAAG;QACA;MACA,GACAC,IAAA,CAAAC,QAAA,IAAAA,QAAA,CAAAC,IAAA,IACAF,IAAA,CAAAjC,IAAA;QACA,KAAAoC,IAAA,CAAAC,KAAA,cAAArC,IAAA;QACA,IAAAA,IAAA,CAAAsC,QAAA;UACA,KAAAC,YAAA,CAAAC,OAAA;YACAC,OAAA,EAAAzC,IAAA,CAAAyC;UACA;QACA;QACA,IAAAzC,IAAA,CAAAsC,QAAA;UACA,KAAAC,YAAA,CAAAG,KAAA;YACAD,OAAA,EAAAzC,IAAA,CAAAyC;UACA;QACA;MACA,GACAE,KAAA,CAAAD,KAAA;QACA,KAAAN,IAAA,CAAAC,KAAA,YAAAK,KAAA;QACA,KAAAH,YAAA,CAAAG,KAAA;UACAD,OAAA;QACA;MACA;IACA;IACAG,QAAA3B,KAAA;MACA,IAAAA,KAAA,IAAAA,KAAA,CAAAC,cAAA;QACAD,KAAA,CAAAC,cAAA;MACA;MACA,KAAAV,IAAA,CAAAC,KAAA;MACA,KAAAD,IAAA,CAAAI,MAAA;MACA,KAAAJ,IAAA,CAAAK,OAAA;MACA,KAAAL,IAAA,CAAAG,aAAA;MACA,KAAAH,IAAA,CAAAE,eAAA;MACA,KAAAI,IAAA;MACA,KAAA+B,SAAA;QACA,KAAA/B,IAAA;MACA;IACA;EACA;EACAgC,QAAA;IACAC,YAAA;MACA,YAAAvC,IAAA,CAAAC,KAAA,CAAAuC,MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}